<dec f='codebrowser/bionic/libc/stdio/local.h' l='267' type='int __sfvwrite(FILE * , struct __suio * )'/>
<dec f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fvwrite.h' l='48' type='int __sfvwrite(FILE * , struct __suio * )'/>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fputs.c' l='55' u='c' c='fputs'/>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fputwc.c' l='70' u='c' c='__fputwc_unlock'/>
<def f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fvwrite.c' l='47' ll='204' type='int __sfvwrite(FILE * fp, struct __suio * uio)'/>
<doc f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fvwrite.c' l='41'>/*
 * Write some memory regions.  Return zero on success, EOF on error.
 *
 * This routine is large and unsightly, but most of the ugliness due
 * to the three different kinds of output buffering is handled here.
 */</doc>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/fwrite.c' l='83' u='c' c='fwrite'/>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/puts.c' l='59' u='c' c='puts'/>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/vfprintf.c' l='107' u='c' c='__sprint'/>
<use f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/stdio/vfwprintf.c' l='153' u='c' c='__xfputwc'/>
