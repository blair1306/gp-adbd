<dec f='codebrowser/bionic/libc/include/math.h' l='288' type='float exp2f(float )'/>
<def f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_exp2f.c' l='94' ll='137' type='float exp2f(float x)'/>
<doc f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_exp2f.c' l='68'>/*
 * exp2f(x): compute the base 2 exponential of x
 *
 * Accuracy: Peak error &lt; 0.501 ulp; location of peak: -0.030110927.
 *
 * Method: (equally-spaced tables)
 *
 *   Reduce x:
 *     x = 2**k + y, for integer k and |y| &lt;= 1/2.
 *     Thus we have exp2f(x) = 2**k * exp2(y).
 *
 *   Reduce y:
 *     y = i/TBLSIZE + z for integer i near y * TBLSIZE.
 *     Thus we have exp2(y) = exp2(i/TBLSIZE) * exp2(z),
 *     with |z| &lt;= 2**-(TBLSIZE+1).
 *
 *   We compute exp2(i/TBLSIZE) via table lookup and exp2(z) via a
 *   degree-4 minimax polynomial with maximum error under 1.4 * 2**-33.
 *   Using double precision for everything except the reduction makes
 *   roundoff error insignificant and simplifies the scaling step.
 *
 *   This method is due to Tang, but I do not use his suggested parameters:
 *
 *	Tang, P.  Table-driven Implementation of the Exponential Function
 *	in IEEE Floating-Point Arithmetic.  TOMS 15(2), 144-157 (1989).
 */</doc>
<use f='codebrowser/external/libcxx/include/cmath' l='1176' u='c' c='_ZNSt3__14exp2Ef'/>
