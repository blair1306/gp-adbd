<dec f='codebrowser/bionic/libc/include/math.h' l='430' type='long double sqrtl(long double )'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_acoshl.c' l='84' u='c' c='acoshl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_acoshl.c' l='87' u='c' c='acoshl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_acosl.c' l='70' u='c' c='acosl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_acosl.c' l='76' u='c' c='acosl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_asinl.c' l='62' u='c' c='asinl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_hypotl.c' l='105' u='c' c='hypotl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_hypotl.c' l='115' u='c' c='hypotl'/>
<def f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_sqrtl.c' l='75' ll='159' type='long double sqrtl(long double x)'/>
<doc f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/e_sqrtl.c' l='70'>/*
 * This is slow, but simple and portable. You should use hardware sqrt
 * if possible.
 */</doc>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_asinhl.c' l='85' u='c' c='asinhl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_asinhl.c' l='88' u='c' c='asinhl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_csqrtl.c' l='96' u='c' c='csqrtl'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_csqrtl.c' l='99' u='c' c='csqrtl'/>
<use f='codebrowser/external/libcxx/include/cmath' l='1012' u='c' c='_ZNSt3__14sqrtEg'/>
