<dec f='codebrowser/external/boringssl/src/include/openssl/asn1.h' l='906' type='void * ASN1_item_dup(const ASN1_ITEM * it, void * x)'/>
<def f='codebrowser/external/boringssl/src/crypto/asn1/a_dup.c' l='87' ll='103' type='void * ASN1_item_dup(const ASN1_ITEM * it, void * x)'/>
<doc f='codebrowser/external/boringssl/src/crypto/asn1/a_dup.c' l='84'>/* ASN1_ITEM version of dup: this follows the model above except we don&apos;t need
 * to allocate the buffer. At some point this could be rewritten to directly dup
 * the underlying structure instead of doing and encode and decode. */</doc>
<use f='codebrowser/external/boringssl/src/crypto/dsa/dsa_asn1.c' l='149' u='c' c='DSAparams_dup'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_algor.c' l='74' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_attrib.c' l='95' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_crl.c' l='383' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_crl.c' l='386' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_exten.c' l='75' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_name.c' l='103' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_name.c' l='136' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_req.c' l='112' macro='1' u='c'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x_x509.c' l='141' macro='1' u='c'/>
