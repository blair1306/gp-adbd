<dec f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='85' type='const char * sdissect(struct smat * m, const char * start, const char * stop, sopno startst, sopno stopst)'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='85' u='c' c='smatcher'/>
<def f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='352' ll='554' type='const char * sdissect(struct smat * m, const char * start, const char * stop, sopno startst, sopno stopst)'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='85' u='c' c='sdissect'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='85' u='c' c='sdissect'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='85' u='c' c='sdissect'/>
<doc f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='347'>/*
 - dissect - figure out what matched what, no back references
 == static const char *dissect(struct match *m, const char *start, \
 ==	const char *stop, sopno startst, sopno stopst);
 */</doc>
<doc f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='352'>/* == stop (success) always */</doc>
