<dec f='codebrowser/external/boringssl/src/include/openssl/asn1.h' l='996' type='int ASN1_mbstring_copy(ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask)'/>
<def f='codebrowser/external/boringssl/src/crypto/asn1/a_mbstr.c' l='84' ll='88' type='int ASN1_mbstring_copy(ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask)'/>
<doc f='codebrowser/external/boringssl/src/crypto/asn1/a_mbstr.c' l='76'>/* These functions take a string in UTF8, ASCII or multibyte form and
 * a mask of permissible ASN1 string types. It then works out the minimal
 * type (using the order Printable &lt; IA5 &lt; T61 &lt; BMP &lt; Universal &lt; UTF8)
 * and creates a string of the correct type with the supplied data.
 * Yes this is horrible: it has to be :-(
 * The &apos;ncopy&apos; form checks minimum and maximum size limits too.
 */</doc>
<use f='codebrowser/external/boringssl/src/crypto/asn1/a_strnid.c' l='135' u='c' c='ASN1_STRING_set_by_NID'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/a_strex.c' l='560' u='c' c='ASN1_STRING_to_UTF8'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/asn1_gen.c' l='769' u='c' c='asn1_str2type'/>
