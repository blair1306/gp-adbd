<dec f='codebrowser/external/boringssl/src/include/openssl/x509v3.h' l='648' type='void * X509V3_get_d2i(struct stack_st_X509_EXTENSION * x, int nid, int * crit, int * idx)'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x509_ext.c' l='98' u='c' c='X509_CRL_get_ext_d2i'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x509_ext.c' l='149' u='c' c='X509_get_ext_d2i'/>
<use f='codebrowser/external/boringssl/src/crypto/x509/x509_ext.c' l='197' u='c' c='X509_REVOKED_get_ext_d2i'/>
<def f='codebrowser/external/boringssl/src/crypto/x509v3/v3_lib.c' l='221' ll='260' type='void * X509V3_get_d2i(struct stack_st_X509_EXTENSION * x, int nid, int * crit, int * idx)'/>
<doc f='codebrowser/external/boringssl/src/crypto/x509v3/v3_lib.c' l='206'>/* Get critical flag and decoded version of extension from a NID.
 * The &quot;idx&quot; variable returns the last found extension and can
 * be used to retrieve multiple extensions of the same NID.
 * However multiple extensions with the same NID is usually
 * due to a badly encoded certificate so if idx is NULL we
 * choke if multiple extensions exist.
 * The &quot;crit&quot; variable is set to the critical value.
 * The return value is the decoded extension or NULL on
 * error. The actual error can have several different causes,
 * the value of *crit reflects the cause:
 * &gt;= 0, extension found but not decoded (reflects critical value).
 * -1 extension not found.
 * -2 extension occurs more than once.
 */</doc>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/v3_utl.c' l='513' u='c' c='X509_REQ_get1_email'/>
