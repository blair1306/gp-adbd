<dec f='codebrowser/external/libcxxabi/include/cxxabi.h' l='48' type='void __cxa_end_catch()'/>
<def f='codebrowser/external/libcxxabi/src/cxa_exception.cpp' l='446' ll='518' type='void __cxa_end_catch()'/>
<doc f='codebrowser/external/libcxxabi/src/cxa_exception.cpp' l='428'>/*
Upon exit for any reason, a handler must call:
    void __cxa_end_catch ();

This routine can be called for either a native or foreign exception.
For a native exception:
* Locates the most recently caught exception and decrements its handler count.
* Removes the exception from the caught exception stack, if the handler count goes to zero.
* If the handler count goes down to zero, and the exception was not re-thrown
  by throw, it locates the primary exception (which may be the same as the one
  it&apos;s handling) and decrements its reference count. If that reference count
  goes to zero, the function destroys the exception. In any case, if the current
  exception is a dependent exception, it destroys that.

For a foreign exception:
* If it has been rethrown, there is nothing to do.
* Otherwise delete the exception and pop the catch stack to empty.
*/</doc>
<use f='codebrowser/external/libcxxabi/src/cxa_personality.cpp' l='1260' u='c' c='__cxa_call_unexpected'/>
<use f='codebrowser/external/libcxxabi/src/cxa_personality.cpp' l='1262' u='c' c='__cxa_call_unexpected'/>
<use f='codebrowser/external/libcxxabi/src/cxa_personality.cpp' l='1284' u='c' c='__cxa_call_unexpected'/>
