<dec f='codebrowser/external/pcre/dist/pcre_internal.h' l='2740' macro='1' type='const pcre_uchar * _pcre_find_bracket(const pcre_uchar * , BOOL , int )'/>
<def f='codebrowser/external/pcre/dist/pcre_compile.c' l='2080' macro='1' type='const pcre_uchar * _pcre_find_bracket(const pcre_uchar * code, BOOL utf, int number)'/>
<use f='codebrowser/external/pcre/dist/pcre_compile.c' l='7494' macro='1' u='c'/>
<use f='codebrowser/external/pcre/dist/pcre_compile.c' l='9479' macro='1' u='c'/>
<use f='codebrowser/external/pcre/dist/pcre_compile.c' l='9529' macro='1' u='c'/>
<use f='codebrowser/external/pcre/dist/pcre_compile.c' l='9531' macro='1' u='c'/>
<doc f='codebrowser/external/pcre/dist/pcre_compile.c' l='2065'>/* This little function scans through a compiled pattern until it finds a
capturing bracket with the given number, or, if the number is negative, an
instance of OP_REVERSE for a lookbehind. The function is global in the C sense
so that it can be called from pcre_study() when finding the minimum matching
length.

Arguments:
  code        points to start of expression
  utf         TRUE in UTF-8 / UTF-16 / UTF-32 mode
  number      the required bracket number or negative to find a lookbehind

Returns:      pointer to the opcode for the bracket, or NULL if not found
*/</doc>
<use f='codebrowser/external/pcre/dist/pcre_study.c' l='398' macro='1' u='c'/>
<use f='codebrowser/external/pcre/dist/pcre_study.c' l='438' macro='1' u='c'/>
