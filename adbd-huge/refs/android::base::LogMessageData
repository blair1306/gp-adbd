<def f='codebrowser/system/core/base/logging.cpp' l='318' ll='366'/>
<size>288</size>
<doc f='codebrowser/system/core/base/logging.cpp' l='316'>// This indirection greatly reduces the stack impact of having lots of
// checks/logging in a function.</doc>
<fun r='_ZN7android4base14LogMessageDataC1EPKcjNS0_5LogIdENS0_11LogSeverityEi'/>
<fun r='_ZNK7android4base14LogMessageData7GetFileEv'/>
<fun r='_ZNK7android4base14LogMessageData13GetLineNumberEv'/>
<fun r='_ZNK7android4base14LogMessageData11GetSeverityEv'/>
<fun r='_ZNK7android4base14LogMessageData5GetIdEv'/>
<fun r='_ZNK7android4base14LogMessageData8GetErrorEv'/>
<fun r='_ZN7android4base14LogMessageData9GetBufferEv'/>
<fun r='_ZNK7android4base14LogMessageData8ToStringEv'/>
<mbr r='android::base::LogMessageData::buffer_' o='0' t='std::ostringstream'/>
<mbr r='android::base::LogMessageData::file_' o='2112' t='const char *const'/>
<mbr r='android::base::LogMessageData::line_number_' o='2176' t='const unsigned int'/>
<mbr r='android::base::LogMessageData::id_' o='2208' t='const android::base::LogId'/>
<mbr r='android::base::LogMessageData::severity_' o='2240' t='const android::base::LogSeverity'/>
<mbr r='android::base::LogMessageData::error_' o='2272' t='const int'/>
<fun r='_ZN7android4base14LogMessageDataC1ERKS1_'/>
