<dec f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_int.h' l='182' type='X509_POLICY_DATA * policy_data_new(POLICYINFO * policy, const ASN1_OBJECT * id, int crit)'/>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_cache.c' l='90' u='c' c='policy_cache_create'/>
<doc f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_int.h' l='180'>/* Internal functions */</doc>
<def f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_data.c' l='87' ll='136' type='X509_POLICY_DATA * policy_data_new(POLICYINFO * policy, const ASN1_OBJECT * cid, int crit)'/>
<doc f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_data.c' l='80'>/* Create a data based on an existing policy. If &apos;id&apos; is NULL use the
 * oid in the policy, otherwise use &apos;id&apos;. This behaviour covers the two
 * types of data in RFC3280: data with from a CertificatePolcies extension
 * and additional data with just the qualifiers of anyPolicy and ID from
 * another source.
 */</doc>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_map.c' l='102' u='c' c='policy_cache_set_mapping'/>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_tree.c' l='253' u='c' c='tree_init'/>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_tree.c' l='391' u='c' c='tree_add_unmatched'/>
<use f='codebrowser/external/boringssl/src/crypto/x509v3/pcy_tree.c' l='677' u='c' c='tree_calculate_user_set'/>
