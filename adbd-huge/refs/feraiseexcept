<dec f='codebrowser/bionic/libc/include/fenv.h' l='41' type='int feraiseexcept(int )'/>
<def f='codebrowser/bionic/libm/amd64/fenv.c' l='141' ll='150' type='int feraiseexcept(int excepts)'/>
<use f='codebrowser/bionic/libm/amd64/fenv.c' l='362' u='c' c='feupdateenv'/>
<doc f='codebrowser/bionic/libm/amd64/fenv.c' l='131'>/*
 * The feraiseexcept() function raises the supported floating-point exceptions
 * represented by the argument `excepts&apos;.
 *
 * The standard explicitly allows us to execute an instruction that has the
 * exception as a side effect, but we choose to manipulate the status register
 * directly.
 *
 * The validation of input is being deferred to fesetexceptflag().
 */</doc>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fma.c' l='212' u='c' c='fma'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fma.c' l='214' u='c' c='fma'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fmal.c' l='200' u='c' c='fmal'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fmal.c' l='202' u='c' c='fmal'/>
<use f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_lround.c' l='63' u='c' c='llround'/>
