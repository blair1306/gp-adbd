<dec f='codebrowser/external/libcxxabi/include/cxxabi.h' l='113' type='void __cxa_vec_dtor(void * array_address, size_t element_count, size_t element_size, void (*)(void *) destructor)'/>
<def f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='256' ll='276' type='void __cxa_vec_dtor(void * array_address, size_t element_count, size_t element_size, void (*)(void *) destructor)'/>
<use f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='341' u='c' c='__cxa_vec_delete2'/>
<use f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='364' u='c' c='__cxa_vec_delete3'/>
<doc f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='250'>// Given the (data) address of an array, the number of elements, and the
// size of its elements, call the given destructor on each element. If the
// destructor throws an exception, rethrow after destroying the remaining
// elements if possible. If the destructor throws a second exception, call
// terminate(). The destructor pointer may be NULL, in which case this
// routine does nothing.</doc>
