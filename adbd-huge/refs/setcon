<dec f='codebrowser/external/libselinux/include/selinux/selinux.h' l='39' type='int setcon(const char * con)'/>
<use f='codebrowser/external/libselinux/src/android.c' l='787' u='c' c='selinux_android_setcon'/>
<doc f='codebrowser/external/libselinux/include/selinux/selinux.h' l='31'>/* Set the current security context to con.  
   Note that use of this function requires that the entire application
   be trusted to maintain any desired separation between the old and new 
   security contexts, unlike exec-based transitions performed via setexeccon.  
   When possible, decompose your application and use setexeccon()+execve() 
   instead. Note that the application may lose access to its open descriptors
   as a result of a setcon() unless policy allows it to use descriptors opened
   by the old context. */</doc>
<def f='codebrowser/external/libselinux/src/procattr.c' l='150' macro='1' type='int setcon(const char * c)'/>
