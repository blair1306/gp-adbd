<dec f='codebrowser/bionic/libc/include/math.h' l='396' type='long double fmal(long double , long double , long double )'/>
<def f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fmal.c' l='165' ll='272' type='long double fmal(long double x, long double y, long double z)'/>
<doc f='codebrowser/bionic/libm/upstream-freebsd/lib/msun/src/s_fmal.c' l='156'>/*
 * Fused multiply-add: Compute x * y + z with a single rounding error.
 *
 * We use scaling to avoid overflow/underflow, along with the
 * canonical precision-doubling technique adapted from:
 *
 *	Dekker, T.  A Floating-Point Technique for Extending the
 *	Available Precision.  Numer. Math. 18, 224-242 (1971).
 */</doc>
<use f='codebrowser/external/libcxx/include/cmath' l='1227' u='c' c='_ZNSt3__13fmaEggg'/>
