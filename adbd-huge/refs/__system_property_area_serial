<dec f='codebrowser/bionic/libc/include/sys/_system_properties.h' l='123' type='unsigned int __system_property_area_serial()'/>
<use f='codebrowser/bionic/libc/bionic/bionic_systrace.cpp' l='51' u='c' c='_ZL12should_tracev'/>
<use f='codebrowser/bionic/libc/bionic/bionic_systrace.cpp' l='52' u='c' c='_ZL12should_tracev'/>
<doc f='codebrowser/bionic/libc/include/sys/_system_properties.h' l='101'>/* Read the global serial number of the system properties
**
** Called to predict if a series of cached __system_property_find
** objects will have seen __system_property_serial values change.
** But also aids the converse, as changes in the global serial can
** also be used to predict if a failed __system_property_find
** could in-turn now find a new object; thus preventing the
** cycles of effort to poll __system_property_find.
**
** Typically called at beginning of a cache cycle to signal if _any_ possible
** changes have occurred since last. If there is, one may check each individual
** __system_property_serial to confirm dirty, or __system_property_find
** to check if the property now exists. If a call to __system_property_add
** or __system_property_update has completed between two calls to
** __system_property_area_serial then the second call will return a larger
** value than the first call. Beware of race conditions as changes to the
** properties are not atomic, the main value of this call is to determine
** whether the expensive __system_property_find is worth retrying to see if
** a property now exists.
**
** Returns the serial number on success, -1 on error.
*/</doc>
<use f='codebrowser/bionic/libc/bionic/libc_logging.cpp' l='525' u='c' c='__android_log_clockid'/>
<def f='codebrowser/bionic/libc/bionic/system_properties.cpp' l='1068' ll='1076' type='unsigned int __system_property_area_serial()'/>
<use f='codebrowser/system/core/liblog/log_is_loggable.c' l='144' u='c' c='__android_log_level'/>
<use f='codebrowser/system/core/liblog/log_is_loggable.c' l='277' u='c' c='__android_log_is_debuggable'/>
<use f='codebrowser/system/core/liblog/log_is_loggable.c' l='321' u='c' c='do_cache2'/>
