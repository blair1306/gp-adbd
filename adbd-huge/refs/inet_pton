<dec f='codebrowser/bionic/libc/include/arpa/inet.h' l='48' type='int inet_pton(int , const char * , void * )'/>
<use f='codebrowser/bionic/libc/dns/net/getaddrinfo.c' l='975' u='c' c='explore_numeric'/>
<use f='codebrowser/bionic/libc/dns/net/gethnamaddr.c' l='800' u='c' c='gethostbyname_internal_real'/>
<use f='codebrowser/bionic/libc/dns/net/gethnamaddr.c' l='1004' u='c' c='netbsd_gethostent_r'/>
<use f='codebrowser/bionic/libc/dns/net/gethnamaddr.c' l='1008' u='c' c='netbsd_gethostent_r'/>
<def f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/net/inet_pton.c' l='47' ll='60' type='int inet_pton(int af, const char * src, void * dst)'/>
<doc f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/net/inet_pton.c' l='36'>/* int
 * inet_pton(af, src, dst)
 *	convert from presentation format (which usually means ASCII printable)
 *	to network format (which is usually some kind of binary format).
 * return:
 *	1 if the address was valid for the specified address family
 *	0 if the address wasn&apos;t valid (`dst&apos; is untouched in this case)
 *	-1 if some other error occurred (`dst&apos; is untouched in this case, too)
 * author:
 *	Paul Vixie, 1996.
 */</doc>
<dec f='codebrowser/prebuilts/ndk/r11/platforms/android-21/arch-x86_64/usr/include/arpa/inet.h' l='49' type='int inet_pton(int , const char * , void * )'/>
