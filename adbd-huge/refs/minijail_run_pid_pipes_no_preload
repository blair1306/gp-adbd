<dec f='codebrowser/external/minijail/libminijail.h' l='219' type='int minijail_run_pid_pipes_no_preload(struct minijail * j, const char * filename, char *const * argv, pid_t * pchild_pid, int * pstdin_fd, int * pstdout_fd, int * pstderr_fd)'/>
<def f='codebrowser/external/minijail/libminijail.c' l='1704' ll='1713' type='int minijail_run_pid_pipes_no_preload(struct minijail * j, const char * filename, char *const * argv, pid_t * pchild_pid, int * pstdin_fd, int * pstdout_fd, int * pstderr_fd)'/>
<doc f='codebrowser/external/minijail/libminijail.h' l='208'>/*
 * Run the specified command in the given minijail, execve(2)-style.
 * Update |*pchild_pid| with the pid of the child.
 * Update |*pstdin_fd| with a fd that allows writing to the child&apos;s
 * standard input.
 * Update |*pstdout_fd| with a fd that allows reading from the child&apos;s
 * standard output.
 * Update |*pstderr_fd| with a fd that allows reading from the child&apos;s
 * standard error.
 * Used with static binaries, or on systems without support for LD_PRELOAD.
 */</doc>
