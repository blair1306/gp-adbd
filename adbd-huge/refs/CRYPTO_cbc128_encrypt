<dec f='codebrowser/external/boringssl/src/crypto/modes/internal.h' l='314' type='void CRYPTO_cbc128_encrypt(const uint8_t * in, uint8_t * out, size_t len, const void * key, uint8_t * ivec, block128_f block)'/>
<doc f='codebrowser/external/boringssl/src/crypto/modes/internal.h' l='310'>/* CRYPTO_cbc128_encrypt encrypts |len| bytes from |in| to |out| using the
 * given IV and block cipher in CBC mode. The input need not be a multiple of
 * 128 bits long, but the output will round up to the nearest 128 bit multiple,
 * zero padding the input if needed. The IV will be updated on return. */</doc>
<use f='codebrowser/external/boringssl/src/crypto/cipher/e_aes.c' l='360' u='c' c='aes_cbc_cipher'/>
<def f='codebrowser/external/boringssl/src/crypto/modes/cbc.c' l='59' ll='111' type='void CRYPTO_cbc128_encrypt(const uint8_t * in, uint8_t * out, size_t len, const void * key, uint8_t * ivec, block128_f block)'/>
