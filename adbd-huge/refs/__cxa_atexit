<dec f='codebrowser/bionic/libc/arch-common/bionic/atexit.h' l='33' type='int __cxa_atexit(void (*)(void *) , void * , void * )'/>
<use f='codebrowser/bionic/libc/arch-common/bionic/atexit.h' l='44' u='c' c='atexit'/>
<dec f='codebrowser/bionic/libc/bionic/libc_init_dynamic.cpp' l='60' type='int __cxa_atexit(void (*)(void *) , void * , void * )'/>
<use f='codebrowser/bionic/libc/bionic/libc_init_dynamic.cpp' l='106' u='c' c='__libc_init'/>
<dec f='codebrowser/bionic/libc/bionic/libc_init_static.cpp' l='46' type='int __cxa_atexit(void (*)(void *) , void * , void * )'/>
<use f='codebrowser/bionic/libc/bionic/libc_init_static.cpp' l='105' u='c' c='__libc_init'/>
<dec f='codebrowser/bionic/libc/bionic/malloc_common.cpp' l='173' type='int __cxa_atexit(void (*)(void *) func, void * arg, void * dso)'/>
<use f='codebrowser/bionic/libc/bionic/malloc_common.cpp' l='406' u='c' c='_ZL16malloc_init_implP12libc_globals'/>
<dec f='codebrowser/bionic/libc/stdlib/atexit.h' l='33' type='int __cxa_atexit(void (*)(void *) , void * , void * )'/>
<def f='codebrowser/bionic/libc/stdlib/atexit.c' l='79' ll='127' type='int __cxa_atexit(void (*)(void *) func, void * arg, void * dso)'/>
<doc f='codebrowser/bionic/libc/stdlib/atexit.c' l='72'>/*
 * Register a function to be performed at exit or when a shared object
 * with the given dso handle is unloaded dynamically.  Also used as
 * the backend for atexit().  For more info on this API, see:
 *
 *	http://www.codesourcery.com/cxx-abi/abi.html#dso-dtor
 */</doc>
<doc f='codebrowser/bionic/libc/stdlib/atexit.h' l='3'>/*
 * Copyright (c) 2002 Daniel Hartmeier
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    - Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */</doc>
<dec f='codebrowser/external/libcxxabi/include/cxxabi.h' l='148' type='int __cxa_atexit(void (*)(void *) f, void * p, void * d)'/>
<doc f='codebrowser/external/libcxxabi/include/cxxabi.h' l='147'>// 3.3.5.3 Runtime API</doc>
