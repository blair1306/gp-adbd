<dec f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' type='const char * sbackref(struct smat * m, const char * start, const char * stop, sopno startst, sopno stopst, sopno lev)'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='smatcher'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='smatcher'/>
<def f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='561' ll='764' type='const char * sbackref(struct smat * m, const char * start, const char * stop, sopno startst, sopno stopst, sopno lev)'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<use f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='86' u='c' c='sbackref'/>
<doc f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='556'>/*
 - backref - figure out what matched what, figuring in back references
 == static const char *backref(struct match *m, const char *start, \
 ==	const char *stop, sopno startst, sopno stopst, sopno lev);
 */</doc>
<doc f='codebrowser/bionic/libc/upstream-netbsd/lib/libc/regex/engine.c' l='561'>/* == stop (success) or NULL (failure) */</doc>
