<dec f='codebrowser/external/libcxxabi/include/cxxabi.h' l='134' type='void __cxa_vec_delete3(void * __array_address, size_t element_size, size_t padding_size, void (*)(void *) destructor, void (*)(void *, size_t) dealloc)'/>
<def f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='352' ll='366' type='void __cxa_vec_delete3(void * array_address, size_t element_size, size_t padding_size, void (*)(void *) destructor, void (*)(void *, size_t) dealloc)'/>
<doc f='codebrowser/external/libcxxabi/src/cxa_vector.cpp' l='347'>// Same as __cxa_vec_delete, except that the given function is used for
// deallocation instead of the default delete function. The deallocation
// function takes both the object address and its size. If dealloc throws
// an exception, the result is undefined. The dealloc pointer may not be
// NULL.</doc>
