<dec f='codebrowser/bionic/libc/include/arpa/inet.h' l='45' type='const char * inet_ntop(int , const void * , char * , socklen_t )'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='163' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='333' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='424' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='691' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='963' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/nameser/ns_print.c' l='968' u='c' c='ns_sprintrrf'/>
<use f='codebrowser/bionic/libc/dns/net/gethnamaddr.c' l='935' u='c' c='android_gethostbyaddrfornet_proxy_internal'/>
<use f='codebrowser/bionic/libc/dns/net/getnameinfo.c' l='296' u='c' c='getnameinfo_inet'/>
<use f='codebrowser/bionic/libc/dns/net/getnameinfo.c' l='342' u='c' c='getnameinfo_inet'/>
<use f='codebrowser/bionic/libc/dns/net/getnameinfo.c' l='364' u='c' c='ip6_parsenumeric'/>
<use f='codebrowser/bionic/libc/dns/resolv/res_debug.c' l='732' u='c' c='__p_sockun'/>
<def f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/net/inet_ntop.c' l='45' ll='58' type='const char * inet_ntop(int af, const void * src, char * dst, socklen_t size)'/>
<doc f='codebrowser/bionic/libc/upstream-openbsd/lib/libc/net/inet_ntop.c' l='37'>/* const char *
 * inet_ntop(af, src, dst, size)
 *	convert a network format address to presentation format.
 * return:
 *	pointer to presentation format address (`dst&apos;), or NULL (see errno).
 * author:
 *	Paul Vixie, 1996.
 */</doc>
<dec f='codebrowser/prebuilts/ndk/r11/platforms/android-21/arch-x86_64/usr/include/arpa/inet.h' l='46' type='const char * inet_ntop(int , const void * , char * , socklen_t )'/>
